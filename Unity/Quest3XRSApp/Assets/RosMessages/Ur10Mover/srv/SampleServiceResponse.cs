//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Ur10Mover
{
    [Serializable]
    public class SampleServiceResponse : Message
    {
        public const string k_RosMessageName = "ur10_mover/SampleService";
        public override string RosMessageName => k_RosMessageName;

        public string output_msg;
        public Geometry.PoseMsg[] sampled_trajectory;

        public SampleServiceResponse()
        {
            this.output_msg = "";
            this.sampled_trajectory = new Geometry.PoseMsg[0];
        }

        public SampleServiceResponse(string output_msg, Geometry.PoseMsg[] sampled_trajectory)
        {
            this.output_msg = output_msg;
            this.sampled_trajectory = sampled_trajectory;
        }

        public static SampleServiceResponse Deserialize(MessageDeserializer deserializer) => new SampleServiceResponse(deserializer);

        private SampleServiceResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.output_msg);
            deserializer.Read(out this.sampled_trajectory, Geometry.PoseMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.output_msg);
            serializer.WriteLength(this.sampled_trajectory);
            serializer.Write(this.sampled_trajectory);
        }

        public override string ToString()
        {
            return "SampleServiceResponse: " +
            "\noutput_msg: " + output_msg.ToString() +
            "\nsampled_trajectory: " + System.String.Join(", ", sampled_trajectory.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}

//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.BaxterMaintenance
{
    [Serializable]
    public class UpdateStatusMsg : Message
    {
        public const string k_RosMessageName = "baxter_maintenance_msgs/UpdateStatus";
        public override string RosMessageName => k_RosMessageName;

        //  See the class UpdateRunner()
        //  status:           One-word description of the current action being performed
        //  long_description: Details pertaining to status if any.  Used for verbose error messages.
        public ushort status;
        public float progress;
        public string long_description;
        public const ushort STS_IDLE = 0;
        public const ushort STS_INVALID = 1;
        public const ushort STS_BUSY = 2;
        public const ushort STS_CANCELLED = 3;
        public const ushort STS_ERR = 4;
        public const ushort STS_MOUNT_UPDATE = 5;
        public const ushort STS_VERIFY_UPDATE = 6;
        public const ushort STS_PREP_STAGING = 7;
        public const ushort STS_MOUNT_STAGING = 8;
        public const ushort STS_EXTRACT_UPDATE = 9;
        public const ushort STS_LOAD_KEXEC = 10;

        public UpdateStatusMsg()
        {
            this.status = 0;
            this.progress = 0.0f;
            this.long_description = "";
        }

        public UpdateStatusMsg(ushort status, float progress, string long_description)
        {
            this.status = status;
            this.progress = progress;
            this.long_description = long_description;
        }

        public static UpdateStatusMsg Deserialize(MessageDeserializer deserializer) => new UpdateStatusMsg(deserializer);

        private UpdateStatusMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.status);
            deserializer.Read(out this.progress);
            deserializer.Read(out this.long_description);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.status);
            serializer.Write(this.progress);
            serializer.Write(this.long_description);
        }

        public override string ToString()
        {
            return "UpdateStatusMsg: " +
            "\nstatus: " + status.ToString() +
            "\nprogress: " + progress.ToString() +
            "\nlong_description: " + long_description.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

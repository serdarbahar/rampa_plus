//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.BaxterCore
{
    [Serializable]
    public class EndEffectorCommandMsg : Message
    {
        public const string k_RosMessageName = "baxter_core_msgs/EndEffectorCommand";
        public override string RosMessageName => k_RosMessageName;

        // # Command to be sent to an end effector
        public uint id;
        //  target end effector id
        public string command;
        //  operation to perform
        //  Well known commands:
        public const string CMD_NO_OP = "no_op";
        public const string CMD_SET = "set";
        public const string CMD_CONFIGURE = "configure";
        public const string CMD_REBOOT = "reboot";
        public const string CMD_RESET = "reset";
        public const string CMD_CALIBRATE = "calibrate";
        public const string CMD_CLEAR_CALIBRATION = "clear_calibration";
        public const string CMD_PREPARE_TO_GRIP = "prepare_to_grip";
        public const string CMD_GRIP = "grip";
        public const string CMD_RELEASE = "release";
        public const string CMD_GO = "go";
        public const string CMD_STOP = "stop";
        // 
        public string args;
        //  JSON arguments to the command
        // 
        public string sender;
        //  optional identifier, returned in state when the command is handled
        public uint sequence;
        //  optional sequence number, return in state when the command is handled

        public EndEffectorCommandMsg()
        {
            this.id = 0;
            this.command = "";
            this.args = "";
            this.sender = "";
            this.sequence = 0;
        }

        public EndEffectorCommandMsg(uint id, string command, string args, string sender, uint sequence)
        {
            this.id = id;
            this.command = command;
            this.args = args;
            this.sender = sender;
            this.sequence = sequence;
        }

        public static EndEffectorCommandMsg Deserialize(MessageDeserializer deserializer) => new EndEffectorCommandMsg(deserializer);

        private EndEffectorCommandMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id);
            deserializer.Read(out this.command);
            deserializer.Read(out this.args);
            deserializer.Read(out this.sender);
            deserializer.Read(out this.sequence);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.command);
            serializer.Write(this.args);
            serializer.Write(this.sender);
            serializer.Write(this.sequence);
        }

        public override string ToString()
        {
            return "EndEffectorCommandMsg: " +
            "\nid: " + id.ToString() +
            "\ncommand: " + command.ToString() +
            "\nargs: " + args.ToString() +
            "\nsender: " + sender.ToString() +
            "\nsequence: " + sequence.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.BaxterCore
{
    [Serializable]
    public class EndEffectorPropertiesMsg : Message
    {
        public const string k_RosMessageName = "baxter_core_msgs/EndEffectorProperties";
        public override string RosMessageName => k_RosMessageName;

        public uint id;
        //  EndEffectorId
        public byte ui_type;
        //  End Effector type enumeration, for the UI:
        public const byte NO_GRIPPER = 0;
        public const byte SUCTION_CUP_GRIPPER = 1;
        public const byte ELECTRIC_GRIPPER = 2;
        public const byte PASSIVE_GRIPPER = 3;
        public string manufacturer;
        //  Manufacturer name
        public string product;
        //  Product name
        public string serial_number;
        //  Serial number, optional
        public string hardware_rev;
        //  Hardware revision, optional
        public string firmware_rev;
        //  Firmware revision, optional
        public string firmware_date;
        //  Firmware date, optional
        // 
        //  End Effector Capabilities
        public bool has_calibration;
        //  true if the gripper has calibration
        public bool controls_grip;
        //  true if the gripper has grip/release control
        public bool senses_grip;
        //  true if the gripper has grip sense
        public bool reverses_grip;
        //  true if the gripper has reverse-grip mode
        public bool controls_force;
        //  true if the gripper has force control
        public bool senses_force;
        //  true if the gripper has force sense
        public bool controls_position;
        //  true if the gripper has position control
        public bool senses_position;
        //  true if the gripper has position sense
        // 
        public string properties;
        //  JSON; other properties

        public EndEffectorPropertiesMsg()
        {
            this.id = 0;
            this.ui_type = 0;
            this.manufacturer = "";
            this.product = "";
            this.serial_number = "";
            this.hardware_rev = "";
            this.firmware_rev = "";
            this.firmware_date = "";
            this.has_calibration = false;
            this.controls_grip = false;
            this.senses_grip = false;
            this.reverses_grip = false;
            this.controls_force = false;
            this.senses_force = false;
            this.controls_position = false;
            this.senses_position = false;
            this.properties = "";
        }

        public EndEffectorPropertiesMsg(uint id, byte ui_type, string manufacturer, string product, string serial_number, string hardware_rev, string firmware_rev, string firmware_date, bool has_calibration, bool controls_grip, bool senses_grip, bool reverses_grip, bool controls_force, bool senses_force, bool controls_position, bool senses_position, string properties)
        {
            this.id = id;
            this.ui_type = ui_type;
            this.manufacturer = manufacturer;
            this.product = product;
            this.serial_number = serial_number;
            this.hardware_rev = hardware_rev;
            this.firmware_rev = firmware_rev;
            this.firmware_date = firmware_date;
            this.has_calibration = has_calibration;
            this.controls_grip = controls_grip;
            this.senses_grip = senses_grip;
            this.reverses_grip = reverses_grip;
            this.controls_force = controls_force;
            this.senses_force = senses_force;
            this.controls_position = controls_position;
            this.senses_position = senses_position;
            this.properties = properties;
        }

        public static EndEffectorPropertiesMsg Deserialize(MessageDeserializer deserializer) => new EndEffectorPropertiesMsg(deserializer);

        private EndEffectorPropertiesMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id);
            deserializer.Read(out this.ui_type);
            deserializer.Read(out this.manufacturer);
            deserializer.Read(out this.product);
            deserializer.Read(out this.serial_number);
            deserializer.Read(out this.hardware_rev);
            deserializer.Read(out this.firmware_rev);
            deserializer.Read(out this.firmware_date);
            deserializer.Read(out this.has_calibration);
            deserializer.Read(out this.controls_grip);
            deserializer.Read(out this.senses_grip);
            deserializer.Read(out this.reverses_grip);
            deserializer.Read(out this.controls_force);
            deserializer.Read(out this.senses_force);
            deserializer.Read(out this.controls_position);
            deserializer.Read(out this.senses_position);
            deserializer.Read(out this.properties);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.ui_type);
            serializer.Write(this.manufacturer);
            serializer.Write(this.product);
            serializer.Write(this.serial_number);
            serializer.Write(this.hardware_rev);
            serializer.Write(this.firmware_rev);
            serializer.Write(this.firmware_date);
            serializer.Write(this.has_calibration);
            serializer.Write(this.controls_grip);
            serializer.Write(this.senses_grip);
            serializer.Write(this.reverses_grip);
            serializer.Write(this.controls_force);
            serializer.Write(this.senses_force);
            serializer.Write(this.controls_position);
            serializer.Write(this.senses_position);
            serializer.Write(this.properties);
        }

        public override string ToString()
        {
            return "EndEffectorPropertiesMsg: " +
            "\nid: " + id.ToString() +
            "\nui_type: " + ui_type.ToString() +
            "\nmanufacturer: " + manufacturer.ToString() +
            "\nproduct: " + product.ToString() +
            "\nserial_number: " + serial_number.ToString() +
            "\nhardware_rev: " + hardware_rev.ToString() +
            "\nfirmware_rev: " + firmware_rev.ToString() +
            "\nfirmware_date: " + firmware_date.ToString() +
            "\nhas_calibration: " + has_calibration.ToString() +
            "\ncontrols_grip: " + controls_grip.ToString() +
            "\nsenses_grip: " + senses_grip.ToString() +
            "\nreverses_grip: " + reverses_grip.ToString() +
            "\ncontrols_force: " + controls_force.ToString() +
            "\nsenses_force: " + senses_force.ToString() +
            "\ncontrols_position: " + controls_position.ToString() +
            "\nsenses_position: " + senses_position.ToString() +
            "\nproperties: " + properties.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}

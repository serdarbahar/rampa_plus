//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.BuiltinInterfaces;

namespace RosMessageTypes.BaxterCore
{
    [Serializable]
    public class AnalogIOStateMsg : Message
    {
        public const string k_RosMessageName = "baxter_core_msgs/AnalogIOState";
        public override string RosMessageName => k_RosMessageName;

        public TimeMsg timestamp;
        public double value;
        public bool isInputOnly;

        public AnalogIOStateMsg()
        {
            this.timestamp = new TimeMsg();
            this.value = 0.0;
            this.isInputOnly = false;
        }

        public AnalogIOStateMsg(TimeMsg timestamp, double value, bool isInputOnly)
        {
            this.timestamp = timestamp;
            this.value = value;
            this.isInputOnly = isInputOnly;
        }

        public static AnalogIOStateMsg Deserialize(MessageDeserializer deserializer) => new AnalogIOStateMsg(deserializer);

        private AnalogIOStateMsg(MessageDeserializer deserializer)
        {
            this.timestamp = TimeMsg.Deserialize(deserializer);
            deserializer.Read(out this.value);
            deserializer.Read(out this.isInputOnly);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.timestamp);
            serializer.Write(this.value);
            serializer.Write(this.isInputOnly);
        }

        public override string ToString()
        {
            return "AnalogIOStateMsg: " +
            "\ntimestamp: " + timestamp.ToString() +
            "\nvalue: " + value.ToString() +
            "\nisInputOnly: " + isInputOnly.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
